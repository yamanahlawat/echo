# Use an NVIDIA CUDA base image
FROM nvidia/cuda:12.3.1-devel-ubuntu22.04

# Set environment variables to non-interactive (to avoid prompts during build)
ENV DEBIAN_FRONTEND=noninteractive
# Set environment variable to tell Poetry to use system environment
# TODO: don't create env
# ENV POETRY_VIRTUALENVS_CREATE=false

# Install Python 3.11 and other system dependencies
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y git python3.11 python3.11-distutils python3-pip

# Update Python alternatives to use Python 3.11 as the default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Cleaning up cache to reduce layer size
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Upgrade pip
RUN pip install --upgrade pip

# Install Poetry
RUN pip install poetry

# set the working directory
WORKDIR /echo

# Copy only requirements to cache them in docker layer
COPY pyproject.toml poetry.lock ./

# Install project dependencies using Poetry
# --no-root: Don't install the root package (i.e., your project package)
# --no-interaction: Avoid interactive prompts from Poetry
RUN poetry install --no-root --no-interaction

# Copy the rest of the project
COPY . ./
